[<img src="https://i.imgur.com/33MpXDi.png" alt="">](https://github.com/wandernauta/iodog)

# iodog.php

**iodog** is a security watchdog/forensic tool for PHP applications. It
attaches itself to running scripts over XDebug, waiting for function calls that
could be considered security-sensitive: file I/O, network I/O, database
queries, process execution and so on. These function calls are collected,
instrumented, categorized and included in an XML report ([sample][s]).

The report can be further processed by other tools, or opened in a browser to
be sliced, diced and otherwise interrogated:

[<img src="http://i.imgur.com/4ZsSKxy.png" alt="">](http://i.imgur.com/4ZsSKxy.png)

Put differently, iodog saves you from having to step through all of WordPress
to find out if that free plugin you just downloaded does more than it says on
the tin.

**iodog** is written in Python and distributed under the MIT license.

## Using iodog

First, install and set up XDebug and set up remote debugging by enabling it in
your `xdebug.ini`:

    zend_extension=/usr/lib/php/modules/xdebug.so
    xdebug.remote_enable=on
    xdebug.remote_host=127.0.0.1
    xdebug.remote_port=9000
    xdebug.remote_handler=dbgp
    xdebug.remote_autostart=on

Then, fire up **iodog** and do some requests:

    user@host /opt/iodog> ./iodog
    DEBUG:root:Loading rulesets
    INFO:root:Waiting for debugger
    DEBUG:root:Starting session
    DEBUG:root:Start
    DEBUG:root: File: file:///srv/http/wp/wp-login.php
    DEBUG:root: Proc: 10644
    DEBUG:root: User: http
    DEBUG:root: Dest: iodog_20140315201614644226_10644_http.xml
    DEBUG:root:(-> starting)
    DEBUG:root:(-> stopping) detaching
    DEBUG:root:End
    INFO:root:Waiting for debugger

The report will be waiting for you:

    user@host /opt/iodog> cat iodog_*.xml | xml fo | head
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="style-0.1.xsl"?>
    <report>
      <generator>iodog v0.1</generator>
      <created>2014-03-15T20:18:44.498099</created>
      <file>file:///srv/http/wp/wp-login.php</file>
      <user>http</user>
      <process>10735</process>
      <rulesets>
        <ruleset>rules.blacklist.Blacklist</ruleset>

To use the browser interface, serve the file over HTTP:

    user@host /opt/iodog> python2 -m SimpleHTTPServer
    Serving HTTP on 0.0.0.0 port 8000 ...

Then try http://localhost:8000 and click the XML file. (Make sure you're
serving the directory that contains the style-0.1.xsl file.)

## Documentation

Refer to the [wiki][wiki] for more information about the rulesets and about
iodog itself.

## Acknowledgements

**iodog** uses the `dbgp.py` module from the excellent [vdebug][vdebug].

## License (MIT)

Copyright (c) 2014 Wander Nauta

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

<i>The software is provided "as is", without warranty of any kind, express or
implied, including but not limited to the warranties of merchantability,
fitness for a particular purpose and noninfringement. In no event shall the
authors or copyright holders be liable for any claim, damages or other
liability, whether in an action of contract, tort or otherwise, arising from,
out of or in connection with the software or the use or other dealings in the
software.</i>

[s]: https://twnc.org/iodog/sample.xml
[vdebug]: https://github.com/joonty/vdebug
[wiki]: https://github.com/wandernauta/iodog/wiki
